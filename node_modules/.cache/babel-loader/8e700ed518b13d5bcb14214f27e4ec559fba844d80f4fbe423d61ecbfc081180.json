{"ast":null,"code":"/**\n * todoReducer\n * \n */\n\n// 액션 타입\nconst CRATE_TODO = \"CRATE_TODO\"; // TODO 추가\nconst DELETE_TODO = \"DELETE_TODO\"; // TODO 삭제\nconst UPDATE_TODO = \"UPDATE_TODO\"; // TODO 수정 (제목, 내용, 상태)\nconst SELECT_TODO = \"SELECT_TODO\"; // TODO 상세보기\n\n// ActionCreater\nexport const crateTodo = () => {\n  return {\n    type: CRATE_TODO\n  };\n};\nexport const deleteTodo = () => {\n  return {\n    type: DELETE_TODO\n  };\n};\nexport const updateTodo = data => {\n  console.log(\"4. updateTodo 액션 생성자\", data);\n  console.log(\"4.1. updateTodo 액션 생성자\", data.title);\n  return {\n    type: UPDATE_TODO,\n    payload: str\n  };\n};\nexport const selectTodo = payload => {\n  return {\n    type: SELECT_TODO,\n    payload: Number(payload)\n  };\n};\n\n// 초기상태값\nconst initState = {\n  id: 0,\n  isDone: false,\n  title: '',\n  body: ''\n};\n\n/**\n * 리듀서 : state를 액션의 타입에 맞추어서 변화를 일으키는 함수\n * 액션 : state를 어떻게 변화시킬지 타입과 내용을 기록한것\n * @param {} initState \n * @param {} action \n */\n\nconst todoReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  console.log(\"0. state:\", state, \", state.id:\", state.id);\n  switch (action.type) {\n    case CRATE_TODO:\n      console.log(\"// TODO 추가\");\n      return {\n        id: state.id + 1,\n        isDone: false,\n        title: '',\n        body: ''\n      };\n    case DELETE_TODO:\n      console.log(\"// TODO 삭제\");\n      return {\n        id: state.id,\n        isDone: false,\n        title: '',\n        body: ''\n      };\n    case UPDATE_TODO:\n      console.log(\"1.1. TODO 수정 (제목, 내용, 상태)\");\n      console.log(\"1.2. todoReducer in state >>\", state.title);\n      console.log(\"1.3. 입력문자열 >>\", state.title + action.payload.target.value);\n      return {\n        id: state.state.id,\n        isDone: false,\n        title: state.title + action.payload.target.value,\n        body: state.body + action.payload.target.value\n      };\n    case SELECT_TODO:\n      console.log(\"// TODO 상세보기\");\n      return {\n        id: state.id + 1,\n        isDone: false,\n        title: '',\n        body: ''\n      };\n    default:\n      return {\n        id: state.id,\n        isDone: false,\n        title: '',\n        body: ''\n      };\n  }\n};\nexport default todoReducer;","map":{"version":3,"names":["CRATE_TODO","DELETE_TODO","UPDATE_TODO","SELECT_TODO","crateTodo","type","deleteTodo","updateTodo","data","console","log","title","payload","str","selectTodo","Number","initState","id","isDone","body","todoReducer","state","arguments","length","undefined","action","target","value"],"sources":["/Users/jooyoungshin/first-react-to-do/src/redux/modules/todoReduser.js"],"sourcesContent":["/**\n * todoReducer\n * \n */\n\n// 액션 타입\nconst CRATE_TODO = \"CRATE_TODO\"     // TODO 추가\nconst DELETE_TODO = \"DELETE_TODO\"   // TODO 삭제\nconst UPDATE_TODO = \"UPDATE_TODO\"   // TODO 수정 (제목, 내용, 상태)\nconst SELECT_TODO = \"SELECT_TODO\"   // TODO 상세보기\n\n// ActionCreater\nexport const crateTodo = () => {\n    return {\n        type: CRATE_TODO\n    }\n}\n\nexport const deleteTodo = () => {\n    return {\n        type: DELETE_TODO\n    }\n}\n\nexport const updateTodo = (data) => {\n    console.log(\"4. updateTodo 액션 생성자\", data)\n    console.log(\"4.1. updateTodo 액션 생성자\", data.title)\n    return {\n        type: UPDATE_TODO,\n        payload: str\n\n    }\n}\n\nexport const selectTodo = (payload) => {\n    return {\n        type: SELECT_TODO,\n        payload : Number(payload)\n    }\n}\n\n// 초기상태값\nconst initState = {\n    id: 0,\n    isDone: false,\n    title:'',\n    body:''\n}\n\n/**\n * 리듀서 : state를 액션의 타입에 맞추어서 변화를 일으키는 함수\n * 액션 : state를 어떻게 변화시킬지 타입과 내용을 기록한것\n * @param {} initState \n * @param {} action \n */\n\n\nconst todoReducer = (state = initState, action) => {\n    console.log(\"0. state:\",state, \", state.id:\",state.id)\n    switch (action.type) {\n        case CRATE_TODO:\n            console.log(\"// TODO 추가\")\n            return {\n                id: state.id+1,\n                isDone: false,\n                title:'',\n                body:''\n            }\n        case DELETE_TODO:\n            console.log(\"// TODO 삭제\")\n            return {\n                id: state.id,\n                isDone: false,\n                title:'',\n                body:''\n            }\n        case UPDATE_TODO:\n            console.log(\"1.1. TODO 수정 (제목, 내용, 상태)\")\n            console.log(\"1.2. todoReducer in state >>\",state.title)\n            console.log(\"1.3. 입력문자열 >>\",state.title + action.payload.target.value)\n            return {\n                id: state.state.id,\n                isDone: false,\n                title:state.title + action.payload.target.value,\n                body:state.body + action.payload.target.value,\n            }\n        case SELECT_TODO:\n            console.log(\"// TODO 상세보기\")\n            return {\n                id: state.id+1,\n                isDone: false,\n                title:'',\n                body:''\n            }\n        default:\n            return {\n                id: state.id,\n                isDone: false,\n                title:'',\n                body:''\n            }\n    }\n}\n\nexport default todoReducer"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}