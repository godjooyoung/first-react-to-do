{"ast":null,"code":"var _jsxFileName = \"/Users/jooyoungshin/first-react-to-do/src/component/TodoList.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Todos from './Todo';\nimport { crateTodo, updateTodo } from '../redux/modules/todoReduser';\nimport styled from \"styled-components\";\nimport * as comm from '../styles/styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TodosList() {\n  _s();\n  /** 스토어에 접근해서 값을 읽어보자 */\n  const todoList = useSelector(state => {\n    console.log(\"1. 스토어 접근후 가져온값 > \", state.todoReducer);\n    return state.todoReducer;\n  });\n\n  /** 컴포넌트의 요청정보를 스토어로 전달해줄 디스패처를 불러온다 */\n  const dispatch = useDispatch();\n\n  /**\n   * 추가버튼을 눌렀을 때 동작하는 함수\n   * @param {*} event \n   */\n  const addBtnClickEventHandler = e => {\n    dispatch(crateTodo());\n  };\n\n  /**\n   * input tag에서 입력 이벤트가 발생할 경우 동작하는 함수\n   * @param {*} event \n   */\n  function iptChangeEventHandler(e) {\n    if (e.target.id === 'titleIpt') {\n      dispatch(updateTodo({\n        title: e.target.value,\n        body: todoList.todo.body,\n        isDone: todoList.todo.isDone\n      }));\n    } else {\n      dispatch(updateTodo({\n        title: todoList.todo.title,\n        body: e.target.value,\n        isDone: todoList.todo.isDone\n      }));\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(comm.Body, {\n    children: [/*#__PURE__*/_jsxDEV(comm.Header, {\n      children: \"MY TODO LIST\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(comm.InnerDiv, {\n      children: [/*#__PURE__*/_jsxDEV(comm.InputLabel, {\n        children: \"TASK\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(comm.StIpt, {\n        id: \"titleIpt\",\n        type: \"text\",\n        onChange: iptChangeEventHandler,\n        value: todoList.todo.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 48\n      }, this), /*#__PURE__*/_jsxDEV(comm.InputLabel, {\n        children: \"TASK CONTENT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(comm.StIpt, {\n        id: \"bodyIpt\",\n        type: \"text\",\n        onChange: iptChangeEventHandler,\n        value: todoList.todo.body\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 56\n      }, this), /*#__PURE__*/_jsxDEV(comm.StBtn, {\n        onClick: addBtnClickEventHandler,\n        children: \"\\uCD94\\uAC00\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"select-div\",\n      children: [/*#__PURE__*/_jsxDEV(StAraa, {\n        children: \"Working\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StCardsDiv, {\n        children: /*#__PURE__*/_jsxDEV(Todos, {\n          area: \"workingZoen\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StAraa, {\n        children: \"Done\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StCardsDiv, {\n        children: /*#__PURE__*/_jsxDEV(Todos, {\n          area: \"doneZoen\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n_s(TodosList, \"YF3/TLP8DhksZsyrP4kXys09RlI=\", false, function () {\n  return [useSelector, useDispatch];\n});\n_c = TodosList;\nexport default TodosList;\nvar _c;\n$RefreshReg$(_c, \"TodosList\");","map":{"version":3,"names":["React","useDispatch","useSelector","Todos","crateTodo","updateTodo","styled","comm","jsxDEV","_jsxDEV","TodosList","_s","todoList","state","console","log","todoReducer","dispatch","addBtnClickEventHandler","e","iptChangeEventHandler","target","id","title","value","body","todo","isDone","Body","children","Header","fileName","_jsxFileName","lineNumber","columnNumber","InnerDiv","InputLabel","StIpt","type","onChange","StBtn","onClick","className","StAraa","StCardsDiv","area","_c","$RefreshReg$"],"sources":["/Users/jooyoungshin/first-react-to-do/src/component/TodoList.jsx"],"sourcesContent":["import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Todos from './Todo'\nimport { crateTodo, updateTodo } from '../redux/modules/todoReduser'\nimport styled from \"styled-components\";\n\nimport * as comm from '../styles/styles'\n\nfunction TodosList() {\n\n  /** 스토어에 접근해서 값을 읽어보자 */\n  const todoList = useSelector((state) => {\n    console.log(\"1. 스토어 접근후 가져온값 > \", state.todoReducer)\n    return state.todoReducer\n  })\n\n  /** 컴포넌트의 요청정보를 스토어로 전달해줄 디스패처를 불러온다 */\n  const dispatch = useDispatch()\n  \n\n  /**\n   * 추가버튼을 눌렀을 때 동작하는 함수\n   * @param {*} event \n   */\n  const addBtnClickEventHandler = (e) =>{\n      dispatch(crateTodo())\n  }\n\n  /**\n   * input tag에서 입력 이벤트가 발생할 경우 동작하는 함수\n   * @param {*} event \n   */\n  function iptChangeEventHandler(e) {\n    if(e.target.id === 'titleIpt'){\n      dispatch(updateTodo({title: e.target.value, body: todoList.todo.body, isDone: todoList.todo.isDone}))\n    }else{\n      dispatch(updateTodo({title: todoList.todo.title, body: e.target.value, isDone: todoList.todo.isDone}))\n    }\n  }\n\n  return (\n    <comm.Body>\n      <comm.Header>MY TODO LIST</comm.Header>\n      <comm.InnerDiv>\n        <comm.InputLabel>TASK</comm.InputLabel><comm.StIpt id=\"titleIpt\" type=\"text\" onChange={iptChangeEventHandler} value={todoList.todo.title}></comm.StIpt>\n        <comm.InputLabel>TASK CONTENT</comm.InputLabel><comm.StIpt id=\"bodyIpt\" type=\"text\" onChange={iptChangeEventHandler} value={todoList.todo.body}></comm.StIpt>\n        <comm.StBtn onClick={addBtnClickEventHandler}>추가</comm.StBtn>\n      </comm.InnerDiv>\n      <div className=\"select-div\">\n        <StAraa>Working</StAraa>\n        <StCardsDiv>\n          <Todos area=\"workingZoen\" />\n        </StCardsDiv>\n        <StAraa>Done</StAraa>\n        <StCardsDiv>\n          <Todos area=\"doneZoen\" />\n        </StCardsDiv>\n\n      </div>\n    </comm.Body>\n  );\n}\n\nexport default TodosList;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}