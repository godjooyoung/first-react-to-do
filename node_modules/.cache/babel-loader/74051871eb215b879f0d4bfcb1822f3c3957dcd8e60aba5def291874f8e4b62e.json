{"ast":null,"code":"var _jsxFileName = \"/Users/jooyoungshin/first-react-to-do/src/component/Todo.jsx\",\n  _s = $RefreshSig$();\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteTodo, selectTodo, toggleTodo } from '../redux/modules/todoReduser';\nimport { useLocation, useNavigate, useParams } from 'react-router-dom';\nimport * as comm from '../styles/styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Todo = _ref => {\n  _s();\n  let {\n    area\n  } = _ref;\n  /** 스토어에 접근해서 값을 읽어보자 */\n  const todos = useSelector(state => {\n    console.log(\"todo 컴포넌트에서!. 스토어 접근후 가져온값 > \", state.todoReducer.todoList);\n    return state.todoReducer.todoList;\n  });\n\n  /** 컴포넌트의 요청정보를 스토어로 전달해줄 디스패처를 불러온다 */\n  const dispatch = useDispatch();\n\n  /**\n   * 완료, 취소, 삭제 버튼을 눌렀을때 동작하는 함수\n   * @param {*} event \n   */\n  function cardBtnClickEventhandle(e) {\n    let btnFlg = e.target.innerText; // 완료, 취소, 삭제 값을 가진다.        \n    let todoId = e.target.id; // 해당 todo의 아이디값을 가져온다. \n\n    if (btnFlg === '삭제') {\n      dispatch(deleteTodo(todoId));\n    } else if (btnFlg == '완료' || btnFlg == '취소') {\n      dispatch(toggleTodo(todoId));\n    } else {\n      dispatch(selectTodo());\n    }\n  }\n  const navigate = useNavigate();\n  const location = useLocation();\n  const param = useParams();\n\n  // todos.isDone 값에 따라 리턴되는 배열을 달리한다.\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: todos.filter(item => {\n      return area == 'workingZoen' ? item.isDone == false : item.isDone == true;\n    }).map(item => {\n      return /*#__PURE__*/_jsxDEV(comm.TodoCard, {\n        children: [/*#__PURE__*/_jsxDEV(comm.TodoTitle, {\n          children: item.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(comm.TodoBody, {\n          children: item.body\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(comm.TodoBtns, {\n          children: [/*#__PURE__*/_jsxDEV(comm.TodoBtn, {\n            onClick: () => {\n              navigate('/details/' + item.id);\n            },\n            children: \"\\uC0C1\\uC138\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(comm.TodoBtn, {\n            onClick: cardBtnClickEventhandle,\n            id: item.id,\n            children: \"\\uC0AD\\uC81C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(comm.TodoBtn, {\n            onClick: cardBtnClickEventhandle,\n            id: item.id,\n            children: area == 'workingZoen' ? '완료' : '취소'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 29\n        }, this)]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 25\n      }, this);\n    })\n  }, void 0, false);\n};\n_s(Todo, \"liCpNh4GILBA4ttyEsWhEphNSVw=\", false, function () {\n  return [useSelector, useDispatch, useNavigate, useLocation, useParams];\n});\n_c = Todo;\nexport default Todo;\nvar _c;\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"names":["useDispatch","useSelector","deleteTodo","selectTodo","toggleTodo","useLocation","useNavigate","useParams","comm","jsxDEV","_jsxDEV","Fragment","_Fragment","Todo","_ref","_s","area","todos","state","console","log","todoReducer","todoList","dispatch","cardBtnClickEventhandle","e","btnFlg","target","innerText","todoId","id","navigate","location","param","children","filter","item","isDone","map","TodoCard","TodoTitle","title","fileName","_jsxFileName","lineNumber","columnNumber","TodoBody","body","TodoBtns","TodoBtn","onClick","_c","$RefreshReg$"],"sources":["/Users/jooyoungshin/first-react-to-do/src/component/Todo.jsx"],"sourcesContent":["import { useDispatch, useSelector } from 'react-redux';\nimport { deleteTodo, selectTodo,  toggleTodo} from '../redux/modules/todoReduser'\nimport { useLocation, useNavigate, useParams } from 'react-router-dom';\nimport * as comm from '../styles/styles'\n\nconst Todo = ({ area }) => {\n\n    /** 스토어에 접근해서 값을 읽어보자 */\n    const todos = useSelector((state) => {\n        console.log(\"todo 컴포넌트에서!. 스토어 접근후 가져온값 > \", state.todoReducer.todoList)\n        return state.todoReducer.todoList\n    })\n\n    /** 컴포넌트의 요청정보를 스토어로 전달해줄 디스패처를 불러온다 */\n    const dispatch = useDispatch()\n\n    /**\n     * 완료, 취소, 삭제 버튼을 눌렀을때 동작하는 함수\n     * @param {*} event \n     */\n    function cardBtnClickEventhandle(e) {\n        let btnFlg = e.target.innerText  // 완료, 취소, 삭제 값을 가진다.        \n        let todoId = e.target.id // 해당 todo의 아이디값을 가져온다. \n\n        if (btnFlg === '삭제') {\n            dispatch(deleteTodo(todoId))\n        } else if (btnFlg == '완료' || btnFlg == '취소') {\n            dispatch(toggleTodo(todoId))\n        } else {\n            dispatch(selectTodo())\n        }\n    }\n\n    const navigate = useNavigate()\n    const location = useLocation()\n    const param = useParams()\n\n\n    // todos.isDone 값에 따라 리턴되는 배열을 달리한다.\n    return (\n        <>\n            {\n                todos.filter((item) => {\n                    return area == 'workingZoen' ? item.isDone == false : item.isDone == true\n                }).map((item) => {\n                    return (\n                        <comm.TodoCard key={item.id}>\n                            <comm.TodoTitle>{item.title}</comm.TodoTitle>\n                            <comm.TodoBody>{item.body}</comm.TodoBody>\n                            <comm.TodoBtns>\n                                <comm.TodoBtn onClick={()=>{navigate('/details/'+item.id)}} >상세</comm.TodoBtn>\n                                <comm.TodoBtn onClick={cardBtnClickEventhandle} id={item.id}>삭제</comm.TodoBtn>\n                                <comm.TodoBtn onClick={cardBtnClickEventhandle} id={item.id}>{area == 'workingZoen' ? '완료' : '취소'}</comm.TodoBtn>\n                            </comm.TodoBtns>\n                        </comm.TodoCard>\n                    )\n                })\n            }\n        </>\n    )\n}\n\nexport default Todo;"],"mappings":";;AAAA,SAASA,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,UAAU,EAAEC,UAAU,EAAGC,UAAU,QAAO,8BAA8B;AACjF,SAASC,WAAW,EAAEC,WAAW,EAAEC,SAAS,QAAQ,kBAAkB;AACtE,OAAO,KAAKC,IAAI,MAAM,kBAAkB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAExC,MAAMC,IAAI,GAAGC,IAAA,IAAc;EAAAC,EAAA;EAAA,IAAb;IAAEC;EAAK,CAAC,GAAAF,IAAA;EAElB;EACA,MAAMG,KAAK,GAAGhB,WAAW,CAAEiB,KAAK,IAAK;IACjCC,OAAO,CAACC,GAAG,CAAC,+BAA+B,EAAEF,KAAK,CAACG,WAAW,CAACC,QAAQ,CAAC;IACxE,OAAOJ,KAAK,CAACG,WAAW,CAACC,QAAQ;EACrC,CAAC,CAAC;;EAEF;EACA,MAAMC,QAAQ,GAAGvB,WAAW,EAAE;;EAE9B;AACJ;AACA;AACA;EACI,SAASwB,uBAAuBA,CAACC,CAAC,EAAE;IAChC,IAAIC,MAAM,GAAGD,CAAC,CAACE,MAAM,CAACC,SAAS,EAAE;IACjC,IAAIC,MAAM,GAAGJ,CAAC,CAACE,MAAM,CAACG,EAAE,EAAC;;IAEzB,IAAIJ,MAAM,KAAK,IAAI,EAAE;MACjBH,QAAQ,CAACrB,UAAU,CAAC2B,MAAM,CAAC,CAAC;IAChC,CAAC,MAAM,IAAIH,MAAM,IAAI,IAAI,IAAIA,MAAM,IAAI,IAAI,EAAE;MACzCH,QAAQ,CAACnB,UAAU,CAACyB,MAAM,CAAC,CAAC;IAChC,CAAC,MAAM;MACHN,QAAQ,CAACpB,UAAU,EAAE,CAAC;IAC1B;EACJ;EAEA,MAAM4B,QAAQ,GAAGzB,WAAW,EAAE;EAC9B,MAAM0B,QAAQ,GAAG3B,WAAW,EAAE;EAC9B,MAAM4B,KAAK,GAAG1B,SAAS,EAAE;;EAGzB;EACA,oBACIG,OAAA,CAAAE,SAAA;IAAAsB,QAAA,EAEQjB,KAAK,CAACkB,MAAM,CAAEC,IAAI,IAAK;MACnB,OAAOpB,IAAI,IAAI,aAAa,GAAGoB,IAAI,CAACC,MAAM,IAAI,KAAK,GAAGD,IAAI,CAACC,MAAM,IAAI,IAAI;IAC7E,CAAC,CAAC,CAACC,GAAG,CAAEF,IAAI,IAAK;MACb,oBACI1B,OAAA,CAACF,IAAI,CAAC+B,QAAQ;QAAAL,QAAA,gBACVxB,OAAA,CAACF,IAAI,CAACgC,SAAS;UAAAN,QAAA,EAAEE,IAAI,CAACK;QAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAkB,eAC7CnC,OAAA,CAACF,IAAI,CAACsC,QAAQ;UAAAZ,QAAA,EAAEE,IAAI,CAACW;QAAI;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAiB,eAC1CnC,OAAA,CAACF,IAAI,CAACwC,QAAQ;UAAAd,QAAA,gBACVxB,OAAA,CAACF,IAAI,CAACyC,OAAO;YAACC,OAAO,EAAEA,CAAA,KAAI;cAACnB,QAAQ,CAAC,WAAW,GAACK,IAAI,CAACN,EAAE,CAAC;YAAA,CAAE;YAAAI,QAAA,EAAE;UAAE;YAAAQ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAe,eAC9EnC,OAAA,CAACF,IAAI,CAACyC,OAAO;YAACC,OAAO,EAAE1B,uBAAwB;YAACM,EAAE,EAAEM,IAAI,CAACN,EAAG;YAAAI,QAAA,EAAC;UAAE;YAAAQ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAe,eAC9EnC,OAAA,CAACF,IAAI,CAACyC,OAAO;YAACC,OAAO,EAAE1B,uBAAwB;YAACM,EAAE,EAAEM,IAAI,CAACN,EAAG;YAAAI,QAAA,EAAElB,IAAI,IAAI,aAAa,GAAG,IAAI,GAAG;UAAI;YAAA0B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAgB;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACrG;MAAA,GAPAT,IAAI,CAACN,EAAE;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAQX;IAExB,CAAC;EAAC,iBAEP;AAEX,CAAC;AAAA9B,EAAA,CAvDKF,IAAI;EAAA,QAGQZ,WAAW,EAMRD,WAAW,EAmBXM,WAAW,EACXD,WAAW,EACdE,SAAS;AAAA;AAAA4C,EAAA,GA9BrBtC,IAAI;AAyDV,eAAeA,IAAI;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}