{"ast":null,"code":"var _jsxFileName = \"/Users/jooyoungshin/first-react-to-do/src/component/TodoList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useDispatch } from 'react';\nimport Todos from './Todo';\nimport { crateTodo, deleteTodo, updateTodo, selectTodo } from '../redux/modules/todoReduser';\n\n// 아이디값\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet id = 0;\nfunction TodosList() {\n  _s();\n  //const [todo, SetTodo] = useState({ id: id, isDone: false, title: '', body: '' })\n  const [todos, SetTodos] = useState([]);\n\n  /** 스토어에 접근해서 값을 읽어보자 */\n  const todo = useSelector(state => {\n    return state.todo;\n  });\n\n  /** 컴포넌트의 요청정보를 스토어로 전달해줄 디스패처를 불러온다 */\n  const dispatch = useDispatch();\n  const btnClickEventHadle = e => {\n    // 디스패쳐에 액션객체를 담아서 넘기면 된다.\n    if (iptValue != 1) {\n      e.target.innerText === '증가' ? dispatch(plusN(iptValue)) : dispatch(minusN(iptValue));\n    } else {\n      e.target.innerText === '증가' ? dispatch(plusOne()) : dispatch(minusOne());\n    }\n  };\n\n  /**\n   * input tag에서 입력 이벤트가 발생할 경우 동작하는 함수\n   * @param {*} event \n   */\n  function iptChangeEventHandler(e) {\n    if (e.target.id === 'titleIpt') {\n      // TASK Input 태그에서 입력 이벤트 발생 시\n      SetTodo({\n        ...todo,\n        title: e.target.value\n      });\n    } else {\n      // CONTENT Input 태그에서 입력 이벤트 발생 시\n      SetTodo({\n        ...todo,\n        body: e.target.value\n      });\n    }\n  }\n\n  /**\n   * 추가버튼을 눌렀을 때 동작하는 함수\n   * @param {*} event \n   */\n  function addBtnClickEventHandler(e) {\n    if (todo.title == '' || todo.body == '') {\n      alert(\"값을 입력해주세요.\");\n    } else {\n      todos.push(todo);\n      SetTodos([...todos]);\n    }\n    id = id + 1;\n    SetTodo({\n      ...todo,\n      id: id,\n      isDone: false,\n      title: '',\n      body: ''\n    });\n  }\n\n  /**\n   * 완료, 취소, 삭제 버튼을 눌렀을때 동작하는 함수\n   * @param {*} event \n   */\n  function cardBtnClickEventhandle(e) {\n    let btnFlg = e.target.innerText; // 완료, 취소, 삭제 값을 가진다.        \n    let todoId = e.target.id; // 해당 todo의 아이디값을 가져온다. \n\n    if (btnFlg === '삭제') {\n      SetTodos([...todos.filter(item => item.id != todoId)]);\n    } else if (btnFlg !== '삭제') {\n      // 취소 또는, 완료 이므로 기존의 상태값을 반대값으로 변경만 해주면 된다.\n      // 맵 전체를 순회하면서 아이디가 선택한 카드의 아이디와 일치하면 상태값을 변경\n      // 아니라면 기존의 상태값을 그대로 유지\n      todos.map(function (item) {\n        item.id == todoId ? item.isDone = !item.isDone : item.isDone = item.isDone;\n      });\n      SetTodos([...todos]);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App-Header\",\n      children: \"MY TODO LIST\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"create-div\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"TASK\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"titleIpt\",\n        type: \"text\",\n        onChange: iptChangeEventHandler,\n        value: todo.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 28\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"TASK CONTENT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"bodyIpt\",\n        type: \"text\",\n        onChange: iptChangeEventHandler,\n        value: todo.body\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 36\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addBtnClickEventHandler,\n        children: \"\\uCD94\\uAC00\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"select-div\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header\",\n        children: \"Working\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cards working\",\n        children: /*#__PURE__*/_jsxDEV(Todos, {\n          todos: todos,\n          cardBtnClickEventhandle: cardBtnClickEventhandle,\n          area: \"workingZoen\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header\",\n        children: \"Done\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cards done\",\n        children: /*#__PURE__*/_jsxDEV(Todos, {\n          todos: todos,\n          cardBtnClickEventhandle: cardBtnClickEventhandle,\n          area: \"doneZoen\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n}\n_s(TodosList, \"97bjfnXyP4JqFT2EDbrE/2xea8M=\", true, function () {\n  return [useDispatch];\n});\n_c = TodosList;\nexport default TodosList;\nvar _c;\n$RefreshReg$(_c, \"TodosList\");","map":{"version":3,"names":["React","useState","useDispatch","Todos","crateTodo","deleteTodo","updateTodo","selectTodo","jsxDEV","_jsxDEV","id","TodosList","_s","todos","SetTodos","todo","useSelector","state","dispatch","btnClickEventHadle","e","iptValue","target","innerText","plusN","minusN","plusOne","minusOne","iptChangeEventHandler","SetTodo","title","value","body","addBtnClickEventHandler","alert","push","isDone","cardBtnClickEventhandle","btnFlg","todoId","filter","item","map","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","onClick","area","_c","$RefreshReg$"],"sources":["/Users/jooyoungshin/first-react-to-do/src/component/TodoList.jsx"],"sourcesContent":["import React, { useState, useDispatch } from 'react';\nimport Todos from './Todo'\nimport { crateTodo, deleteTodo, updateTodo, selectTodo } from '../redux/modules/todoReduser'\n\n// 아이디값\nlet id = 0;\n\nfunction TodosList() {\n\n  //const [todo, SetTodo] = useState({ id: id, isDone: false, title: '', body: '' })\n  const [todos, SetTodos] = useState([])\n\n  /** 스토어에 접근해서 값을 읽어보자 */\n  const todo = useSelector((state) => {\n    return state.todo\n  })\n\n  /** 컴포넌트의 요청정보를 스토어로 전달해줄 디스패처를 불러온다 */\n  const dispatch = useDispatch()\n  \n  const btnClickEventHadle = (e) =>{\n    // 디스패쳐에 액션객체를 담아서 넘기면 된다.\n    if(iptValue != 1){\n      e.target.innerText === '증가'?dispatch(plusN(iptValue)):dispatch(minusN(iptValue))\n    }else{\n      e.target.innerText === '증가'?dispatch(plusOne()):dispatch(minusOne())\n    }\n  }\n\n  /**\n   * input tag에서 입력 이벤트가 발생할 경우 동작하는 함수\n   * @param {*} event \n   */\n  function iptChangeEventHandler(e) {\n    if (e.target.id === 'titleIpt') {\n      // TASK Input 태그에서 입력 이벤트 발생 시\n      SetTodo({ ...todo, title: e.target.value })\n    } else {\n      // CONTENT Input 태그에서 입력 이벤트 발생 시\n      SetTodo({ ...todo, body: e.target.value })\n    }\n  }\n\n  /**\n   * 추가버튼을 눌렀을 때 동작하는 함수\n   * @param {*} event \n   */\n  function addBtnClickEventHandler(e) {\n    if (todo.title == '' || todo.body == '') {\n      alert(\"값을 입력해주세요.\")\n    } else {\n      todos.push(todo)\n      SetTodos([...todos])\n    }\n    id = id + 1;\n    SetTodo({ ...todo, id: id, isDone: false, title: '', body: '' })\n  }\n\n  /**\n   * 완료, 취소, 삭제 버튼을 눌렀을때 동작하는 함수\n   * @param {*} event \n   */\n  function cardBtnClickEventhandle(e) {\n    let btnFlg = e.target.innerText  // 완료, 취소, 삭제 값을 가진다.        \n    let todoId = e.target.id // 해당 todo의 아이디값을 가져온다. \n\n    if (btnFlg === '삭제') {\n      SetTodos([...todos.filter((item) => (item.id != todoId))])\n    } else if (btnFlg !== '삭제') {\n      // 취소 또는, 완료 이므로 기존의 상태값을 반대값으로 변경만 해주면 된다.\n      // 맵 전체를 순회하면서 아이디가 선택한 카드의 아이디와 일치하면 상태값을 변경\n      // 아니라면 기존의 상태값을 그대로 유지\n      todos.map(function (item) {\n        item.id == todoId ? item.isDone = !item.isDone : item.isDone = item.isDone\n      })\n      SetTodos([...todos])\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <div className=\"App-Header\">MY TODO LIST</div>\n      <div className=\"create-div\">\n        <label>TASK</label><input id=\"titleIpt\" type=\"text\" onChange={iptChangeEventHandler} value={todo.title}></input>\n        <label>TASK CONTENT</label><input id=\"bodyIpt\" type=\"text\" onChange={iptChangeEventHandler} value={todo.body}></input>\n        <button onClick={addBtnClickEventHandler}>추가</button>\n      </div>\n      <div className=\"select-div\">\n        <div className=\"header\">Working</div>\n        <div className=\"cards working\">\n          <Todos todos={todos} cardBtnClickEventhandle={cardBtnClickEventhandle} area=\"workingZoen\" />\n        </div>\n\n        <div className=\"header\">Done</div>\n        <div className=\"cards done\">\n          <Todos todos={todos} cardBtnClickEventhandle={cardBtnClickEventhandle} area=\"doneZoen\" />\n        </div>\n\n      </div>\n    </div>\n  );\n}\n\nexport default TodosList;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}