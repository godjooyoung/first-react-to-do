{"ast":null,"code":"var _jsxFileName = \"/Users/jooyoungshin/first-react-to-do/src/component/Todo.jsx\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { crateTodo, deleteTodo, updateTodo, selectTodo } from '../redux/modules/todoReduser';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Todo = _ref => {\n  let {\n    todos,\n    cardBtnClickEventhandle,\n    area\n  } = _ref;\n  // todos.isDone 값에 따라 리턴되는 배열을 달리한다.\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: todos.filter(item => {\n      return area == 'workingZoen' ? item.isDone == false : item.isDone == true;\n    }).map(item => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"task-title\",\n          children: item.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"task-body\",\n          children: item.body\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"task-btns\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: cardBtnClickEventhandle,\n            id: item.id,\n            children: \"\\uC0AD\\uC81C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: cardBtnClickEventhandle,\n            id: item.id,\n            children: area == 'workingZoen' ? '완료' : '취소'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 21\n        }, this)]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 17\n      }, this);\n    })\n  }, void 0, false);\n};\n_c = Todo;\nexport default Todo;\nvar _c;\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"names":["useDispatch","useSelector","crateTodo","deleteTodo","updateTodo","selectTodo","jsxDEV","_jsxDEV","Fragment","_Fragment","Todo","_ref","todos","cardBtnClickEventhandle","area","children","filter","item","isDone","map","className","title","fileName","_jsxFileName","lineNumber","columnNumber","body","onClick","id","_c","$RefreshReg$"],"sources":["/Users/jooyoungshin/first-react-to-do/src/component/Todo.jsx"],"sourcesContent":["import { useDispatch, useSelector } from 'react-redux';\nimport { crateTodo, deleteTodo, updateTodo, selectTodo } from '../redux/modules/todoReduser'\n\nconst Todo = ({ todos, cardBtnClickEventhandle, area}) => {\n    // todos.isDone 값에 따라 리턴되는 배열을 달리한다.\n    return (\n        <>\n        {\n            todos.filter((item) => {\n                return area=='workingZoen'?item.isDone == false:item.isDone == true\n            }).map((item) => {\n                return (\n                <div key={item.id} className=\"task\">\n                    <div className=\"task-title\">{item.title}</div>\n                    <div className=\"task-body\">{item.body}</div>\n                    <div className=\"task-btns\">\n                        <button onClick={cardBtnClickEventhandle} id={item.id}>삭제</button>\n                        <button onClick={cardBtnClickEventhandle} id={item.id}>{area=='workingZoen'?'완료':'취소'}</button>\n                    </div>\n                </div>\n                )\n            })\n        }\n    </>\n    )\n}\n\nexport default Todo;"],"mappings":";AAAA,SAASA,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,SAAS,EAAEC,UAAU,EAAEC,UAAU,EAAEC,UAAU,QAAQ,8BAA8B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE5F,MAAMC,IAAI,GAAGC,IAAA,IAA6C;EAAA,IAA5C;IAAEC,KAAK;IAAEC,uBAAuB;IAAEC;EAAI,CAAC,GAAAH,IAAA;EACjD;EACA,oBACIJ,OAAA,CAAAE,SAAA;IAAAM,QAAA,EAEIH,KAAK,CAACI,MAAM,CAAEC,IAAI,IAAK;MACnB,OAAOH,IAAI,IAAE,aAAa,GAACG,IAAI,CAACC,MAAM,IAAI,KAAK,GAACD,IAAI,CAACC,MAAM,IAAI,IAAI;IACvE,CAAC,CAAC,CAACC,GAAG,CAAEF,IAAI,IAAK;MACb,oBACAV,OAAA;QAAmBa,SAAS,EAAC,MAAM;QAAAL,QAAA,gBAC/BR,OAAA;UAAKa,SAAS,EAAC,YAAY;UAAAL,QAAA,EAAEE,IAAI,CAACI;QAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAO,eAC9ClB,OAAA;UAAKa,SAAS,EAAC,WAAW;UAAAL,QAAA,EAAEE,IAAI,CAACS;QAAI;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAO,eAC5ClB,OAAA;UAAKa,SAAS,EAAC,WAAW;UAAAL,QAAA,gBACtBR,OAAA;YAAQoB,OAAO,EAAEd,uBAAwB;YAACe,EAAE,EAAEX,IAAI,CAACW,EAAG;YAAAb,QAAA,EAAC;UAAE;YAAAO,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAS,eAClElB,OAAA;YAAQoB,OAAO,EAAEd,uBAAwB;YAACe,EAAE,EAAEX,IAAI,CAACW,EAAG;YAAAb,QAAA,EAAED,IAAI,IAAE,aAAa,GAAC,IAAI,GAAC;UAAI;YAAAQ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAU;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAC7F;MAAA,GANAR,IAAI,CAACW,EAAE;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAOX;IAEV,CAAC;EAAC,iBAEP;AAEP,CAAC;AAAAI,EAAA,GAtBKnB,IAAI;AAwBV,eAAeA,IAAI;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}