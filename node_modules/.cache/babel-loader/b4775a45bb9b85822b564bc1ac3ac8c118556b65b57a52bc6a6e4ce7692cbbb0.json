{"ast":null,"code":"/**\n * todoReducer\n * \n */\n\n// 액션 타입\nconst CRATE_TODO = \"CRATE_TODO\"; // TODO 추가\nconst DELETE_TODO = \"DELETE_TODO\"; // TODO 삭제\nconst UPDATE_TODO = \"UPDATE_TODO\"; // TODO 수정 (제목, 내용, 상태)\nconst SELECT_TODO = \"SELECT_TODO\"; // TODO 상세보기\n\n// ActionCreater\nexport const crateTodo = () => {\n  return {\n    type: CRATE_TODO\n  };\n};\nexport const deleteTodo = () => {\n  return {\n    type: DELETE_TODO\n  };\n};\nexport const updateTodo = data => {\n  console.log(\"4. updateTodo 액션 생성자\", data);\n  console.log(\"4.1. updateTodo 액션 생성자 title>>\", data.title);\n  console.log(\"4.1. updateTodo 액션 생성자 target>>\", data.target);\n  return {\n    type: UPDATE_TODO,\n    payload: data\n  };\n};\nexport const selectTodo = payload => {\n  return {\n    type: SELECT_TODO,\n    payload: Number(payload)\n  };\n};\n\n// 초기상태값\nconst initState = {\n  id: 0,\n  isDone: false,\n  title: '',\n  body: ''\n};\n\n/**\n * 리듀서 : state를 액션의 타입에 맞추어서 변화를 일으키는 함수\n * 액션 : state를 어떻게 변화시킬지 타입과 내용을 기록한것\n * @param {} initState \n * @param {} action \n */\n\nconst todoReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  console.log(\"0. state:\", state, \", state.id:\", state.id);\n  switch (action.type) {\n    case CRATE_TODO:\n      console.log(\"// TODO 추가\");\n      return {\n        id: state.id + 1,\n        isDone: false,\n        title: '',\n        body: ''\n      };\n    case DELETE_TODO:\n      console.log(\"// TODO 삭제\");\n      return {\n        id: state.id,\n        isDone: false,\n        title: '',\n        body: ''\n      };\n    case UPDATE_TODO:\n      console.log(\"5. TODO 수정 (제목, 내용, 상태)\");\n      console.log(\"5.1. state >>\", state);\n      console.log(\"5.2. action >>\", action);\n      console.log(\"5.3. action.payload.target >>\", action.payload.target);\n      console.log(\"5.3. action.payload.title >>\", action.payload.title);\n      console.log(\"5.3. action.payload.body >>\", action.payload.body);\n      if (action.payload.target == 'titleIpt') {\n        let value1 = state.body;\n        let value2 = action.payload.title;\n      } else {\n        let value1 = state.title;\n        let value2 = action.payload.body;\n      }\n      return {\n        id: state.id,\n        isDone: false,\n        title: action.payload.title,\n        body: action.payload.body\n      };\n    case SELECT_TODO:\n      console.log(\"// TODO 상세보기\");\n      return {\n        id: state.id + 1,\n        isDone: false,\n        title: '',\n        body: ''\n      };\n    default:\n      return {\n        id: state.id,\n        isDone: false,\n        title: '',\n        body: ''\n      };\n  }\n};\nexport default todoReducer;","map":{"version":3,"names":["CRATE_TODO","DELETE_TODO","UPDATE_TODO","SELECT_TODO","crateTodo","type","deleteTodo","updateTodo","data","console","log","title","target","payload","selectTodo","Number","initState","id","isDone","body","todoReducer","state","arguments","length","undefined","action","value1","value2"],"sources":["/Users/jooyoungshin/first-react-to-do/src/redux/modules/todoReduser.js"],"sourcesContent":["/**\n * todoReducer\n * \n */\n\n// 액션 타입\nconst CRATE_TODO = \"CRATE_TODO\"     // TODO 추가\nconst DELETE_TODO = \"DELETE_TODO\"   // TODO 삭제\nconst UPDATE_TODO = \"UPDATE_TODO\"   // TODO 수정 (제목, 내용, 상태)\nconst SELECT_TODO = \"SELECT_TODO\"   // TODO 상세보기\n\n// ActionCreater\nexport const crateTodo = () => {\n    return {\n        type: CRATE_TODO\n    }\n}\n\nexport const deleteTodo = () => {\n    return {\n        type: DELETE_TODO\n    }\n}\n\nexport const updateTodo = (data) => {\n    console.log(\"4. updateTodo 액션 생성자\", data)\n    console.log(\"4.1. updateTodo 액션 생성자 title>>\", data.title)\n    console.log(\"4.1. updateTodo 액션 생성자 target>>\", data.target)\n    return {\n        type: UPDATE_TODO,\n        payload: data\n    }\n}\n\nexport const selectTodo = (payload) => {\n    return {\n        type: SELECT_TODO,\n        payload : Number(payload)\n    }\n}\n\n// 초기상태값\nconst initState = {\n    id: 0,\n    isDone: false,\n    title:'',\n    body:''\n}\n\n/**\n * 리듀서 : state를 액션의 타입에 맞추어서 변화를 일으키는 함수\n * 액션 : state를 어떻게 변화시킬지 타입과 내용을 기록한것\n * @param {} initState \n * @param {} action \n */\n\n\nconst todoReducer = (state = initState, action) => {\n    console.log(\"0. state:\",state, \", state.id:\",state.id)\n    switch (action.type) {\n        case CRATE_TODO:\n            console.log(\"// TODO 추가\")\n            return {\n                id: state.id+1,\n                isDone: false,\n                title:'',\n                body:''\n            }\n        case DELETE_TODO:\n            console.log(\"// TODO 삭제\")\n            return {\n                id: state.id,\n                isDone: false,\n                title:'',\n                body:''\n            }\n        case UPDATE_TODO:\n            console.log(\"5. TODO 수정 (제목, 내용, 상태)\")\n            console.log(\"5.1. state >>\",state)\n            console.log(\"5.2. action >>\",action)\n            console.log(\"5.3. action.payload.target >>\",action.payload.target)\n            console.log(\"5.3. action.payload.title >>\",action.payload.title)\n            console.log(\"5.3. action.payload.body >>\",action.payload.body)\n            if(action.payload.target == 'titleIpt'){\n                let value1 = state.body\n                let value2 = action.payload.title\n            }else{\n                let value1 = state.title\n                let value2 = action.payload.body\n            }\n            return {\n                id: state.id,\n                isDone: false,\n                title:action.payload.title,\n                body:action.payload.body,\n            }\n        case SELECT_TODO:\n            console.log(\"// TODO 상세보기\")\n            return {\n                id: state.id+1,\n                isDone: false,\n                title:'',\n                body:''\n            }\n        default:\n            return {\n                id: state.id,\n                isDone: false,\n                title:'',\n                body:''\n            }\n    }\n}\n\nexport default todoReducer"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}