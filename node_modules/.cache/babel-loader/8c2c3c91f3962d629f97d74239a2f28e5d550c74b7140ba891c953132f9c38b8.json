{"ast":null,"code":"var _jsxFileName = \"/Users/jooyoungshin/first-react-to-do/src/component/Todo.jsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Todo = _ref => {\n  let {\n    todos,\n    cardBtnClickEventhandle\n  } = _ref;\n  // todos.isDone 값에 따라 리턴되는 배열을 달리한다.\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: todos.filter(item => {\n      return item.isDone == false;\n    }).map(item => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"task-title\",\n          children: item.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"task-body\",\n          children: item.body\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"task-btns\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: cardBtnClickEventhandle,\n            id: item.id,\n            children: \"\\uC0AD\\uC81C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 15,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: cardBtnClickEventhandle,\n            id: item.id,\n            children: \"\\uC644\\uB8CC\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 21\n        }, this)]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 17\n      }, this);\n    })\n  }, void 0, false);\n\n  // if (todos == \"working\") {\n  //     return (\n  //         <>\n  //             {\n  //                 todos.filter((todo) => {\n  //                     return todo.isDone == false && todo.title != ''\n  //                 }).map((todo, idx) => {\n  //                     return (<div key={todo.id} className=\"task\">\n  //                         <div className=\"task-title\">{todo.title}</div>\n  //                         <div className=\"task-body\">{todo.body}</div>\n  //                         <div className=\"task-btns\"><button onClick={cardBtnClickEventhandle} id={\"del\" + todo.id}>삭제</button><button onClick={cardBtnClickEventhandle} id={\"dne\" + todo.id}>완료</button></div>\n  //                     </div>\n\n  //                     )\n  //                 })\n  //             }\n  //         </>\n  //     )\n  // } else {\n  //     return (\n  //         <>\n  //             {\n  //                 todos.filter((todo) => {\n  //                     return todo.isDone == true && todo.title != ''\n  //                 }).map((todo, idx) => {\n  //                     return (<div key={todo.id} className=\"task\">\n  //                         <div className=\"task-title\">{todo.title}</div>\n  //                         <div className=\"task-body\">{todo.body}</div>\n  //                         <div className=\"task-btns\"><button onClick={cardBtnClickEventhandle} id={\"del\" + todo.id}>삭제</button><button onClick={cardBtnClickEventhandle} id={\"Wrk\" + todo.id}>취소</button></div>\n  //                     </div>\n\n  //                     )\n  //                 })\n  //             }\n  //         </>\n  //     )\n  // }\n};\n_c = Todo;\nexport default Todo;\nvar _c;\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"names":["Todo","_ref","todos","cardBtnClickEventhandle","_jsxDEV","_Fragment","children","filter","item","isDone","map","className","title","fileName","_jsxFileName","lineNumber","columnNumber","body","onClick","id","_c","$RefreshReg$"],"sources":["/Users/jooyoungshin/first-react-to-do/src/component/Todo.jsx"],"sourcesContent":["\nconst Todo = ({ todos, cardBtnClickEventhandle}) => {\n    // todos.isDone 값에 따라 리턴되는 배열을 달리한다.\n    return (\n        <>\n        {\n            todos.filter((item) => {\n                return item.isDone == false\n            }).map((item) => {\n                return (\n                <div key={item.id} className=\"task\">\n                    <div className=\"task-title\">{item.title}</div>\n                    <div className=\"task-body\">{item.body}</div>\n                    <div className=\"task-btns\">\n                        <button onClick={cardBtnClickEventhandle} id={item.id}>삭제</button>\n                        <button onClick={cardBtnClickEventhandle} id={item.id}>완료</button>\n                    </div>\n                </div>\n                )\n            })\n        }\n    </>\n    )\n\n    // if (todos == \"working\") {\n    //     return (\n    //         <>\n    //             {\n    //                 todos.filter((todo) => {\n    //                     return todo.isDone == false && todo.title != ''\n    //                 }).map((todo, idx) => {\n    //                     return (<div key={todo.id} className=\"task\">\n    //                         <div className=\"task-title\">{todo.title}</div>\n    //                         <div className=\"task-body\">{todo.body}</div>\n    //                         <div className=\"task-btns\"><button onClick={cardBtnClickEventhandle} id={\"del\" + todo.id}>삭제</button><button onClick={cardBtnClickEventhandle} id={\"dne\" + todo.id}>완료</button></div>\n    //                     </div>\n\n    //                     )\n    //                 })\n    //             }\n    //         </>\n    //     )\n    // } else {\n    //     return (\n    //         <>\n    //             {\n    //                 todos.filter((todo) => {\n    //                     return todo.isDone == true && todo.title != ''\n    //                 }).map((todo, idx) => {\n    //                     return (<div key={todo.id} className=\"task\">\n    //                         <div className=\"task-title\">{todo.title}</div>\n    //                         <div className=\"task-body\">{todo.body}</div>\n    //                         <div className=\"task-btns\"><button onClick={cardBtnClickEventhandle} id={\"del\" + todo.id}>삭제</button><button onClick={cardBtnClickEventhandle} id={\"Wrk\" + todo.id}>취소</button></div>\n    //                     </div>\n\n    //                     )\n    //                 })\n    //             }\n    //         </>\n    //     )\n    // }\n}\n\nexport default Todo;"],"mappings":";;;AACA,MAAMA,IAAI,GAAGC,IAAA,IAAuC;EAAA,IAAtC;IAAEC,KAAK;IAAEC;EAAuB,CAAC,GAAAF,IAAA;EAC3C;EACA,oBACIG,OAAA,CAAAC,SAAA;IAAAC,QAAA,EAEIJ,KAAK,CAACK,MAAM,CAAEC,IAAI,IAAK;MACnB,OAAOA,IAAI,CAACC,MAAM,IAAI,KAAK;IAC/B,CAAC,CAAC,CAACC,GAAG,CAAEF,IAAI,IAAK;MACb,oBACAJ,OAAA;QAAmBO,SAAS,EAAC,MAAM;QAAAL,QAAA,gBAC/BF,OAAA;UAAKO,SAAS,EAAC,YAAY;UAAAL,QAAA,EAAEE,IAAI,CAACI;QAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAO,eAC9CZ,OAAA;UAAKO,SAAS,EAAC,WAAW;UAAAL,QAAA,EAAEE,IAAI,CAACS;QAAI;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAO,eAC5CZ,OAAA;UAAKO,SAAS,EAAC,WAAW;UAAAL,QAAA,gBACtBF,OAAA;YAAQc,OAAO,EAAEf,uBAAwB;YAACgB,EAAE,EAAEX,IAAI,CAACW,EAAG;YAAAb,QAAA,EAAC;UAAE;YAAAO,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAS,eAClEZ,OAAA;YAAQc,OAAO,EAAEf,uBAAwB;YAACgB,EAAE,EAAEX,IAAI,CAACW,EAAG;YAAAb,QAAA,EAAC;UAAE;YAAAO,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAS;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAChE;MAAA,GANAR,IAAI,CAACW,EAAE;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAOX;IAEV,CAAC;EAAC,iBAEP;;EAGH;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;AACJ,CAAC;AAAAI,EAAA,GA5DKpB,IAAI;AA8DV,eAAeA,IAAI;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}